{"version":3,"file":"static/js/5.4958f053.chunk.js","mappings":"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","sources":["Pages/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport { FaUserAlt, FaLock } from 'react-icons/fa';\nimport { CustomFormController } from '../Components/customs.js';\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from '../Hooks/AuthContext.js';\nimport {\n  Flex,\n  Box,\n  Button,\n  Grid,\n  GridItem,\n  Center,\n  Text,\n  Heading,\n  IconButton,\n} from '@chakra-ui/react';\nimport AuthBackground from '../Components/AuthModule/AuthBackground.js';\nimport AuthHeader from '../Components/AuthModule/AuthHeader.js';\nimport AuthFooter from '../Components/AuthModule/AuthFooter.js';\nimport { Auth } from '../API/Paths.js';\nimport { PostRequest } from '../API/api';\nimport '../Style/auth.css';\nimport { IoMdSad, IoMdClose } from 'react-icons/io';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [feedback, setFeedback] = useState('');\n\n  const { setUser } = useAuth();\n\n  const handleReset = () => {\n    setName('');\n    setPassword('');\n  };\n\n  const handleSignin = async e => {\n    e.preventDefault();\n\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    let form = new FormData();\n    form.append('name', name);\n    form.append('password', password);\n\n    PostRequest({ url: `${Auth}/signin` }, form)\n      .then(res => {\n        const {\n          statusText,\n          data: { data },\n        } = res;\n        if (!statusText === 'OK') {\n          throw new Error('Bad response.', { cause: res });\n        }\n\n        sessionStorage.setItem('token', data.token);\n        setUser(data);\n        navigate('/');\n        handleReset();\n      })\n      .catch(err => {\n        console.log(err);\n        const {\n          response: {\n            status,\n            data: { message },\n          },\n        } = err;\n\n        switch (status) {\n          case 400:\n            setFeedback(message);\n            break;\n          case 401:\n            setFeedback(message);\n            break;\n          case 403:\n            setFeedback(message);\n            break;\n          case 404:\n            setFeedback(message);\n            break;\n          default:\n            setFeedback('Please try again later.');\n            break;\n        }\n      });\n    setLoading(false);\n  };\n\n  const handleNavigateToRegister = e => {\n    e.preventDefault();\n    navigate('/register');\n  };\n\n  const handleNavigateToRecovery = e => {\n    e.preventDefault();\n    navigate('/account-recovery');\n  };\n\n  return (\n    <>\n      <Box\n        w={'100%'}\n        h={'100vh'}\n        bg={'rgba(0,0,0,0.1)'}\n        position={'absolute'}\n        backgroundImage={'linear-gradient(#B0F3F1,#FFCFDF)'}\n      >\n        <Box\n          display={['block', 'block', 'none', 'none']}\n          textAlign=\"center\"\n          pt={3}\n          pb={2}\n          letterSpacing={4}\n        >\n          <Heading size={'lg'} color=\"teal\">\n            ZCMC TELEMEDICINE\n          </Heading>\n        </Box>\n        <Box\n          w={['100%', '100%', '70%', '60%']}\n          h={['80%', '80%', '60%', '70%']}\n          left={'50%'}\n          top={'50%'}\n          transform=\"translate(-50%, -50%)\"\n          position={'absolute'}\n          boxShadow={['none', 'none', '2xl', '2xl']}\n          rounded={15}\n          overflow={'hidden'}\n        >\n          <Grid\n            templateRows={'repeat(1, 1fr)'}\n            templateColumns=\"repeat(12, 1fr)\"\n          >\n            <GridItem rowSpan={1} colSpan={[12, 12, 12, 7]}>\n              <AuthBackground />\n            </GridItem>\n            <GridItem rowSpan={[1, 1, 1, 0]} colSpan={[12, 12, 12, 5]}>\n              <Box\n                w={'100%'}\n                h={'100%'}\n                bg={[\n                  'transparent',\n                  'transparent',\n                  'whiteAlpha.900',\n                  'whiteAlpha.600',\n                ]}\n              >\n                <Flex\n                  flexDirection={'column'}\n                  justifyContent={'space-between'}\n                  pl={10}\n                  pt={[2, 2, 0, 8]}\n                  pr={10}\n                  pb={3}\n                  h={['70vh', '70vh', '40vh', '70vh']}\n                >\n                  <AuthHeader title=\"Sign In\" />\n                  <Box\n                    w={'inherit'}\n                    h={'inherit'}\n                    display={'flex'}\n                    flexDirection={'column'}\n                    mt={feedback === '' ? '2rem' : '1.1rem'}\n                  >\n                    <Box\n                      bg=\"red\"\n                      pl={2}\n                      pr={2}\n                      rounded={5}\n                      color=\"white\"\n                      display={feedback === '' ? 'none' : 'block'}\n                    >\n                      <Flex\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        columnGap={2}\n                      >\n                        <Flex alignItems=\"center\" columnGap={2}>\n                          <IoMdSad size={25} />\n                          <Text fontSize={[12, 12, 14, 14]}>{feedback}</Text>\n                        </Flex>\n                        <IconButton\n                          bg=\"red\"\n                          _hover={{ bg: 'red' }}\n                          _active={{ bg: 'red' }}\n                          icon={<IoMdClose size={30} />}\n                          onClick={() => setFeedback('')}\n                        />\n                      </Flex>\n                    </Box>\n                    <CustomFormController\n                      isSignup={false}\n                      type={'text'}\n                      title={''}\n                      value={name}\n                      setValue={setName}\n                      placeholder={'Username'}\n                      mt={5}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <FaUserAlt color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                      isRequired={false}\n                    />\n                    <CustomFormController\n                      isSignup={false}\n                      type={'password'}\n                      title={''}\n                      value={password}\n                      setValue={setPassword}\n                      placeholder={'Password'}\n                      mt={3}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <FaLock color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                      isRequired={false}\n                    />\n                    <Button\n                      color={'blackAlpha.500'}\n                      bg=\"transparent\"\n                      mt={[4, 4, 6, 8]}\n                      _hover={{\n                        bg: 'transparent',\n                        color: 'blackAlpha.700',\n                      }}\n                      _active={{ bg: 'white', color: 'gray' }}\n                      onClick={e => handleNavigateToRecovery(e)}\n                    >\n                      <Text fontWeight={400} fontSize={14}>\n                        Forgot password?\n                      </Text>\n                    </Button>\n                    <Flex\n                      w=\"100%\"\n                      columnGap={5}\n                      rowGap={3}\n                      mt={[4, 4, 4, 8]}\n                      flexDirection={[\n                        'column',\n                        'column',\n                        'row-reverse',\n                        'column',\n                      ]}\n                    >\n                      <Button\n                        w=\"inherit\"\n                        isLoading={loading}\n                        loadingText={'Signing In'}\n                        bg={'teal'}\n                        color={'white'}\n                        _hover={{ bg: 'teal' }}\n                        onClick={e => handleSignin(e)}\n                        disabled={name === '' || password === ''}\n                      >\n                        <Text fontSize={[12, 12, 14, 14]}>Login</Text>\n                      </Button>\n                      <Button\n                        w=\"inherit\"\n                        bg={'gray'}\n                        color={'white'}\n                        _hover={{\n                          bg: 'darkorange',\n                        }}\n                        onClick={e => handleNavigateToRegister(e)}\n                      >\n                        <Text fontSize={[12, 12, 14, 14]}>Create account?</Text>\n                      </Button>\n                    </Flex>\n                  </Box>\n                  <AuthFooter />\n                </Flex>\n              </Box>\n            </GridItem>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["navigate","useNavigate","useState","name","setName","password","setPassword","loading","setLoading","feedback","setFeedback","setUser","useAuth","handleSignin","e","preventDefault","form","FormData","append","PostRequest","url","Auth","then","res","statusText","data","Error","cause","sessionStorage","setItem","token","catch","err","console","log","response","status","message","w","h","bg","position","backgroundImage","display","textAlign","pt","pb","letterSpacing","size","color","left","top","transform","boxShadow","rounded","overflow","templateRows","templateColumns","rowSpan","colSpan","AuthBackground","flexDirection","justifyContent","pl","pr","AuthHeader","title","mt","alignItems","columnGap","fontSize","_hover","_active","icon","onClick","isSignup","type","value","setValue","placeholder","children","mb","borderRight","isRequired","handleNavigateToRecovery","fontWeight","rowGap","isLoading","loadingText","disabled","handleNavigateToRegister","AuthFooter"],"sourceRoot":""}