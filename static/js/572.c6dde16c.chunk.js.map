{"version":3,"file":"static/js/572.c6dde16c.chunk.js","mappings":"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","sources":["Pages/Registration.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  IconButton,\n  Center,\n  Flex,\n  Text,\n  Grid,\n  GridItem,\n  Heading,\n} from '@chakra-ui/react';\nimport CustomFormController from '../Components/customs/CustomFormController';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PostRequest } from '../API/api';\nimport { Auth } from '../API/Paths';\nimport AuthHeader from '../Components/AuthModule/AuthHeader';\nimport AuthBackground from '../Components/AuthModule/AuthBackground';\nimport AuthFooter from '../Components/AuthModule/AuthFooter';\nimport { FaUserAlt, FaLock } from 'react-icons/fa';\nimport { MdEmail } from 'react-icons/md';\nimport { HiEmojiSad } from 'react-icons/hi';\nimport { IoClose } from 'react-icons/io5';\n\nconst Registration = () => {\n  const navigate = useNavigate();\n\n  const defaultProfileURL = `${window.location.origin}/default_profile.png`;\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [feedback, setFeedback] = useState('');\n\n  const emailExc = useState('');\n  const passExc = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  const validatePasword = () => password === confirmPassword;\n\n  const reset = () => {\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const handleSignup = e => {\n    e.preventDefault();\n\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n\n    if (validatePasword) {\n      let bodyForm = new FormData();\n      bodyForm.append('name', username);\n      bodyForm.append('email', email);\n      bodyForm.append('password', password);\n      bodyForm.append('url', defaultProfileURL);\n\n      PostRequest({ url: `${Auth}/signup` }, bodyForm)\n        .then(res => res.data)\n        .then(res => {\n          if (!res.statusText === 'OK') {\n            throw new Error('Bad response', { cause: res });\n          }\n\n          navigate('/account', {\n            replace: true,\n            state: { id: res.data, password: password, message: '' },\n          });\n          reset();\n          setLoading(false);\n        })\n        .catch(err => {\n          const {\n            response: {\n              status,\n              data: { message },\n            },\n          } = err;\n\n          switch (status) {\n            case 400:\n              setFeedback(message);\n              break;\n            case 409:\n              setFeedback(message);\n              break;\n            default:\n              setFeedback(message);\n              break;\n          }\n          setLoading(false);\n        });\n    }\n  };\n\n  const handleNavigate = e => {\n    e.preventDefault();\n    navigate('/login');\n  };\n\n  return (\n    <>\n      <Box\n        w={'100%'}\n        h={'100vh'}\n        bg={'rgba(0,0,0,0.1)'}\n        position={'absolute'}\n        backgroundImage={'linear-gradient(#B0F3F1,#FFCFDF)'}\n      >\n        <Box\n          display={['block', 'block', 'none', 'none']}\n          textAlign=\"center\"\n          pt={3}\n          pb={2}\n          letterSpacing={4}\n        >\n          <Heading size={'lg'} color=\"teal\">\n            ZCMC REGIONAL TELEMEDICINE CENTER\n          </Heading>\n        </Box>\n        <Box\n          w={['100%', '100%', '70%', '60%']}\n          h={['80%', '80%', '70%', '70%']}\n          left={'50%'}\n          top={'50%'}\n          transform=\"translate(-50%, -50%)\"\n          position={'absolute'}\n          boxShadow={['none', 'none', '2xl', '2xl']}\n          rounded={15}\n          overflow={'hidden'}\n        >\n          <Grid\n            templateRows={'repeat(1, 1fr)'}\n            templateColumns=\"repeat(12, 1fr)\"\n          >\n            <GridItem rowSpan={1} colSpan={[12, 12, 12, 7]}>\n              <AuthBackground />\n            </GridItem>\n            <GridItem rowSpan={[1, 1, 1, 0]} colSpan={[12, 12, 12, 5]}>\n              <Box\n                w={'100%'}\n                h={'100%'}\n                bg={[\n                  'transparent',\n                  'transparent',\n                  'whiteAlpha.900',\n                  'whiteAlpha.600',\n                ]}\n              >\n                <Flex\n                  flexDirection={'column'}\n                  justifyContent={'space-between'}\n                  pl={10}\n                  pt={[2, 2, 0, 8]}\n                  pr={10}\n                  pb={3}\n                  h={['70vh', '70vh', '50vh', '70vh']}\n                >\n                  <AuthHeader title={'Sign up'} />\n                  <Box\n                    w={'inherit'}\n                    h={'inherit'}\n                    display={'flex'}\n                    flexDirection={'column'}\n                    mt={'1rem'}\n                  >\n                    <Box\n                      bg=\"red\"\n                      pl={2}\n                      pr={2}\n                      rounded={5}\n                      color=\"white\"\n                      display={feedback === '' ? 'none' : 'block'}\n                    >\n                      <Flex\n                        justifyContent=\"space-between\"\n                        alignItems=\"center\"\n                        columnGap={2}\n                      >\n                        <Flex alignItems=\"center\" columnGap={2}>\n                          <HiEmojiSad size={25} />\n                          <Text fontSize={[12, 12, 14, 14]}>{feedback}</Text>\n                        </Flex>\n                        <IconButton\n                          bg=\"red\"\n                          _hover={{ bg: 'red' }}\n                          _active={{ bg: 'red' }}\n                          icon={<IoClose size={30} />}\n                          onClick={() => setFeedback('')}\n                        />\n                      </Flex>\n                    </Box>\n                    <CustomFormController\n                      isSignup={false}\n                      type={'text'}\n                      title={''}\n                      value={username}\n                      setValue={setUsername}\n                      placeholder={'Username'}\n                      errorMessage={emailExc}\n                      isError={false}\n                      mt={5}\n                      isRequired={false}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <FaUserAlt color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                    />\n                    <CustomFormController\n                      isSignup={false}\n                      type={'text'}\n                      title={''}\n                      value={email}\n                      setValue={setEmail}\n                      placeholder={'Email'}\n                      errorMessage={emailExc}\n                      isError={false}\n                      mt={3}\n                      isRequired={false}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <MdEmail color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                    />\n                    <CustomFormController\n                      isSignup={false}\n                      type={'password'}\n                      title={''}\n                      value={password}\n                      setValue={setPassword}\n                      placeholder={'Password'}\n                      errorMessage={passExc}\n                      isError={false}\n                      mt={3}\n                      isRequired={false}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <FaLock color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                    />\n                    <CustomFormController\n                      isSignup={false}\n                      type={'password'}\n                      title={''}\n                      value={confirmPassword}\n                      setValue={setConfirmPassword}\n                      placeholder={'Confirm password'}\n                      errorMessage={passExc}\n                      isError={false}\n                      mt={3}\n                      isRequired={false}\n                      children={\n                        <Box\n                          w={8}\n                          h={4}\n                          mt={6}\n                          mb={6}\n                          borderRight={'1px solid rgba(0,0,0,0.2)'}\n                        >\n                          <Center>\n                            <FaLock color=\"teal\" size={15} />\n                          </Center>\n                        </Box>\n                      }\n                    />\n                    <Flex\n                      w=\"100%\"\n                      columnGap={5}\n                      rowGap={3}\n                      mt={[10, 10, 12, 14]}\n                      flexDirection={[\n                        'column',\n                        'column',\n                        'row-reverse',\n                        'column',\n                      ]}\n                    >\n                      <Button\n                        w=\"inherit\"\n                        isLoading={loading}\n                        loadingText={'Signing In'}\n                        bg={'teal'}\n                        color={'white'}\n                        _hover={{ bg: 'teal' }}\n                        onClick={e => handleSignup(e)}\n                        disabled={\n                          username === '' ||\n                          email === '' ||\n                          password === '' ||\n                          password !== confirmPassword\n                        }\n                      >\n                        <Text fontSize={[12, 12, 14, 14]}>Register</Text>\n                      </Button>\n                      <Button\n                        w=\"inherit\"\n                        bg={'gray'}\n                        color={'white'}\n                        _hover={{\n                          bg: 'darkorange',\n                        }}\n                        onClick={e => handleNavigate(e)}\n                      >\n                        <Text fontSize={[12, 12, 14, 14]}>Sign In</Text>\n                      </Button>\n                    </Flex>\n                  </Box>\n                  <AuthFooter />\n                </Flex>\n              </Box>\n            </GridItem>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Registration;\n"],"names":["navigate","useNavigate","defaultProfileURL","window","location","origin","useState","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","feedback","setFeedback","emailExc","passExc","loading","setLoading","validatePasword","handleSignup","e","preventDefault","bodyForm","FormData","append","PostRequest","url","Auth","then","res","data","statusText","Error","cause","replace","state","id","message","catch","err","response","status","w","h","bg","position","backgroundImage","display","textAlign","pt","pb","letterSpacing","size","color","left","top","transform","boxShadow","rounded","overflow","templateRows","templateColumns","rowSpan","colSpan","flexDirection","justifyContent","pl","pr","title","mt","alignItems","columnGap","fontSize","_hover","_active","icon","onClick","isSignup","type","value","setValue","placeholder","errorMessage","isError","isRequired","children","mb","borderRight","rowGap","isLoading","loadingText","disabled","handleNavigate"],"sourceRoot":""}